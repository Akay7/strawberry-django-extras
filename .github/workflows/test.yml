name: ðŸ”‚ Tests

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "strawberry_django_extras/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/test.yml"

jobs:
  lint:
    name: âœ¨ Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      # Update output format to enable automatic inline annotations.
      - name: Run Ruff
        run: ruff check --output-format=github .

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        django-version:
          - 4.2.*
          - 5.0.*
          - 5.1.*
          - 5.2.*
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
        exclude:
          # Django 4.2 only supports python 3.8-3.12
          - django-version: 4.2.*
            python-version: '3.13'
          - django-version: 4.2.*
            python-version: '3.14'
          # Django 5.0 only supports python 3.10-3.12
          - django-version: 5.0.*
            python-version: '3.13'
          - django-version: 5.0.*
            python-version: '3.14'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          cache: poetry
          python-version: ${{ matrix.python-version }}
      - name: Install Deps
        run: poetry install
      - name: Install Django ${{ matrix.django-version }}
        run: poetry run pip install "django==${{ matrix.django-version }}"
      - name: Test with pytest
        run: poetry run pytest -n auto --showlocals -vvv --cov-report=xml
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
